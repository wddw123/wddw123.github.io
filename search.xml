<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>博客搭建</title>
      <link href="/2022/10/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/"/>
      <url>/2022/10/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建教程</title>
      <link href="/2022/10/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/"/>
      <url>/2022/10/28/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E6%95%99%E7%A8%8B/</url>
      
        <content type="html"><![CDATA[<p>2022年10月新版，Windows环境下，基于hexo框架，GitHub托管，搭建的博客</p><h1 id="一、需要的工具"><a href="#一、需要的工具" class="headerlink" title="一、需要的工具"></a>一、需要的工具</h1><h2 id="nodejs"><a href="#nodejs" class="headerlink" title="nodejs"></a><a href="https://nodejs.org/en/">nodejs</a></h2><h3 id="1-下载安装"><a href="#1-下载安装" class="headerlink" title="1.下载安装"></a>1.下载安装</h3><blockquote><p>下载LTS版本,安装路径自己决定，但一定要记住</p></blockquote><p><img src="/image-20221027134227036-1666965218608-1.png"></p><ul><li>我这里选的是C盘，其他选项保持默认即可</li></ul><p><img src="/Snipaste_2022-10-28_15-55-34-1666965230017-3.png"></p><h3 id="2-环境配置"><a href="#2-环境配置" class="headerlink" title="2.环境配置"></a>2.环境配置</h3><ul><li><p>在键盘按下【win+R】键，输入cmd，然后回车，打开cmd窗口</p></li><li><p>输入以下命令</p><pre><code>node -v  #查看node版本npm -v   #查看npm版本</code></pre><p><img src="/Snipaste_2022-10-28_15-59-10-1666965238452-5.png"></p></li></ul><p><strong>注意：新版的Node.js已自带npm，安装Node.js时会一起安装</strong></p><ul><li>配置npm的全局模块的存放路径以及cache的路径：在nodejs文件夹中创建两个文件夹，”node_global”及”node_cache”</li></ul><p><img src="/Snipaste_2022-10-28_16-00-39-1666965246253-7.png"></p><ul><li><p>在cmd中输入</p><pre><code>npm config set prefix &quot;C:\Program Files\nodejs\node_global&quot;（这个是自己刚创建两个文件的位置）npm config set cache &quot;C:\Program Files\nodejs\node_cache&quot;(这也是)</code></pre></li><li><p>接下来设置环境变量，关闭cmd窗口，“我的电脑”-右键-“属性”-“高级系统设置”-“高级”-“环境变量”</p></li><li><p>进入环境变量对话框，在【系统变量】下新建【NODE_PATH】，</p><p>输入【C:\Program Files\nodejs\node_globall\node_modules】，</p><p>将【系统变量】下的【Path】修改为【C:\Program Files\nodejs\node_global】,</p></li></ul><p><img src="/Snipaste_2022-10-28_16-02-36-1666965253351-9.png"></p><p><img src="/Snipaste_2022-10-28_16-03-23-1666965259291-11.png"></p><h3 id="3-cnpm的安装"><a href="#3-cnpm的安装" class="headerlink" title="3.cnpm的安装"></a>3.cnpm的安装</h3><ul><li><p>管理员权限打开cmd</p><pre><code>npm install -g cnpm --registry=https://registry.npm.taobao.org</code></pre></li><li><p>然后安装好后可以执行</p><pre><code>cnpm -v     #查看cnpm版本号</code></pre><p><img src="/Snipaste_2022-10-28_16-04-49-1666965266387-13.png"></p></li></ul><blockquote><p>出现上图，则安装成功</p></blockquote><h2 id="git-Git-git-scm-com"><a href="#git-Git-git-scm-com" class="headerlink" title="[git](Git (git-scm.com))"></a>[git](<a href="https://git-scm.com/">Git (git-scm.com)</a>)</h2><h3 id="1-下载安装-1"><a href="#1-下载安装-1" class="headerlink" title="1.下载安装"></a>1.下载安装</h3><blockquote><p>一般使用默认设置即可：一路next，git安装完毕！</p></blockquote><p><img src="/image-20221027135847116-1666965273767-15.png"></p><h3 id="2-环境配置-1"><a href="#2-环境配置-1" class="headerlink" title="2.环境配置"></a>2.环境配置</h3><ul><li><p>找到git安装路径中bin的位置，如：<code>C:\Program Files\Git\bin</code></p></li><li><p>找到git安装路径中git-core的位置，如：<code>C:\Program Files\Git\mingw64\libexec\git-core</code></p></li><li><p>右键“计算机”-&gt;“属性”-&gt;“高级系统设置”-&gt;“环境变量”-&gt;在下方的“系统变量”中找到“path”-&gt;选中“path”并选择“编辑”-&gt;将找到的bin和git-core路径复制到其中-&gt;保存并退出</p><p><img src="/Snipaste_2022-10-28_16-07-16-1666965287271-17.png"></p></li><li><p>在cmd中输入</p><pre><code>git -vgit</code></pre><p>会出现下图：</p><p><img src="/Snipaste_2022-10-28_16-09-42.png"></p></li></ul><p><img src="/Snipaste_2022-10-28_16-10-23-1666965301992-20.png"></p><p><strong>注意：如果没有配置环境，会显示</strong><code>&#39;git&#39; 不是内部或外部命令，也不是可运行的程序</code>,这时再进行配置即可</p><ul><li><p>初次安装git需要配置用户名和邮箱，否则git会提示：please tell me who you are.</p></li><li><p>用命令<code>git config --global --list</code>查看</p><pre><code>git config --global user.name &quot;你的用户名&quot;            #配置用户名git config --global user.email &quot;你的邮箱&quot;             #配置邮箱</code></pre><p><img src="/Snipaste_2022-10-28_16-12-34-1666965309196-22.png"></p><blockquote><p>此用户名和邮箱是git提交代码时用来显示你身份和联系方式的，并不是github用户名和邮箱</p></blockquote></li></ul><h1 id="二、安装博客"><a href="#二、安装博客" class="headerlink" title="二、安装博客"></a>二、安装博客</h1><h2 id="1-初步搭建"><a href="#1-初步搭建" class="headerlink" title="1.初步搭建"></a>1.初步搭建</h2><p>[Win+R]cmd或用power shell输入命令时，使用管理员权限，以cmd为例</p><pre><code>runas /user:administrator cmd</code></pre><p>输入管理员密码，即可进入</p><blockquote><p>提示</p><p><img src="/image-20221027142831962.png"></p><p>有可能是管理员账户没开，此电脑-&gt;管理-&gt;本地用户和组-&gt;用户-&gt;administrator，点击属性，去掉用户以禁用前面的勾，即可</p></blockquote><pre><code>cnpm install -g hexo-cli    #安装hexo框架hexo -v#查看hexo版本</code></pre><p><img src="/Snipaste_2022-10-28_16-16-54-1666965325914-25.png"></p><p>在C盘中建立一个<code>blog</code>文件夹，这里我把博客安装到c:\blog</p><pre><code>cd c:\blog     #切换目录mkdir blog        #建立blog文件夹cd blog           #进入刚创建的blog目录hexo init #生成博客 初始化博客</code></pre><p><strong>注意:初始化博客时，可能会一致卡住，直接按【Ctrl+C】终止，然后使用下列命令安装</strong></p><pre><code>cnpm install</code></pre><p><img src="/Snipaste_2022-10-28_16-20-53-1666965334973-27.png"></p><pre><code>hexo s#启动本地博客服务</code></pre><p>打开浏览器，输入 <code>localhost:4000</code> 。 自此，你的个人网站就这么速度的搭建起来了！</p><p><img src="/image-20221027143746417-1666965370236-33.png"></p><h2 id="2-新建文章"><a href="#2-新建文章" class="headerlink" title="2.新建文章"></a>2.新建文章</h2><pre><code>hexo n &quot;第一篇博客&quot; # 新建一个名为第一篇博客.md的文件</code></pre><p>可以使用记事本或Typora编辑内容</p><pre><code class="text">hexo clean #清理hexo g #生成hexo s #启动</code></pre><p><img src="/Snipaste_2022-10-28_16-27-42-1666965359034-31.png"></p><h2 id="3-连接GitHub"><a href="#3-连接GitHub" class="headerlink" title="3.连接GitHub"></a>3.连接GitHub</h2><h3 id="生成ssh公钥，并绑定GitHub"><a href="#生成ssh公钥，并绑定GitHub" class="headerlink" title="生成ssh公钥，并绑定GitHub"></a>生成ssh公钥，并绑定GitHub</h3><p>生成本地的SSH<a href="https://so.csdn.net/so/search?q=%E5%85%AC%E9%92%A5&spm=1001.2101.3001.7020">公钥</a>，并且绑定到远端的github，实现免密码登录（这一步很重要否则每次提交都需要输入密码）</p><blockquote><p>如果没有GitHub账号建议先创建一个，在<a href="https://github.com/">https://github.com/</a></p></blockquote><pre><code>#生成公钥ssh-keygen -t rsa -C &quot;yourmail&quot;   # 后面为Github注册邮箱</code></pre><p>接下来会提示输入生成的key存放的路径，不设置直接回车的话会默认创建在C:&#x2F;Users&#x2F;你的用户账号&#x2F;.ssh文件夹下（默认即可）</p><p>再接下来会提示你输入密码，这个密码是用来每次提交的时候输入确认，可以不设置，直接回车两次</p><p>出现下图，则表示成功生成SSH key了</p><p><img src="/Snipaste_2022-10-28_16-35-27-1666965378965-35.png"></p><p><img src="/Snipaste_2022-10-28_16-36-12-1666965385969-37.png"></p><p>点开上图，复制，粘贴到下图的SSH keys中</p><p><img src="/Snipaste_2022-10-28_16-37-51-1666965393764-39.png"></p><p><img src="/Snipaste_2022-10-28_16-38-23-1666965400242-41.png"></p><pre><code>cnpm install --save hexo-deployer-git #在blog目录下安装git部署插件ssh -T git@github.com   #测试SSH连接</code></pre><p><img src="/Snipaste_2022-10-28_16-40-17-1666965409964-43.png"></p><h3 id="在GitHub上建立一个仓库"><a href="#在GitHub上建立一个仓库" class="headerlink" title="在GitHub上建立一个仓库"></a>在GitHub上建立一个仓库</h3><p><img src="/Snipaste_2022-10-28_16-42-30-1666965416460-45.png"></p><p><strong>注意：仓库名必须与github用户名前面一致，否则会报错</strong></p><h3 id="修改-config-yml文件"><a href="#修改-config-yml文件" class="headerlink" title="修改 _config.yml文件"></a>修改 _config.yml文件</h3><p>修改博客目录中的配置文件 <code>_config.yml</code></p><pre><code>deploy:  type: git  repo: https://github.com/xiaokai5201/xiaokai5201.github.io.git  branch: master</code></pre><blockquote><p>注意：type里面的 git 不需要需要加单引号；repo 的内容是复制的仓库的 https 链接</p></blockquote><h3 id="推送到GitHub"><a href="#推送到GitHub" class="headerlink" title="推送到GitHub"></a>推送到GitHub</h3><p>安装 <code>hexo-deployer-git</code></p><pre><code>cnpm install hexo-deployer-git --save</code></pre><p>推送博客目录到远程 Github</p><pre><code>hexo d</code></pre><blockquote><p>网络原因，因为服务器在国外，可能会显示无法连接，多推送几次就好了，如果有VPN更好</p></blockquote><p><img src="/Snipaste_2022-10-28_17-01-03-1666965425605-47.png"></p><p>出现下图，则推送成功</p><p><img src="/Snipaste_2022-10-28_18-37-37-1666965431298-49.png"></p><h1 id="三、安装过程中可能会发生的错误"><a href="#三、安装过程中可能会发生的错误" class="headerlink" title="三、安装过程中可能会发生的错误"></a>三、安装过程中可能会发生的错误</h1><h2 id="1-hexo-d命令报错-ERROR-Deployer-not-found-git"><a href="#1-hexo-d命令报错-ERROR-Deployer-not-found-git" class="headerlink" title="1.hexo d命令报错 ERROR Deployer not found: git"></a>1.hexo d命令报错 ERROR Deployer not found: git</h2><p>这是因为没安装<code>hexo-deployer-git</code>插件，在<strong>站点目录</strong>下输入下面的插件安装就好了：</p><pre><code>npm install hexo-deployer-git --save</code></pre><h2 id="2-fatal-detected-dubious-ownership-in-repository-at解决办法"><a href="#2-fatal-detected-dubious-ownership-in-repository-at解决办法" class="headerlink" title="2.fatal detected dubious ownership in repository at解决办法"></a>2.fatal detected dubious ownership in repository at解决办法</h2><pre><code>fatal: detected dubious ownership in repository at &#39;/media/data/users/jhu3szh/serialize&#39;To add an exception for this directory, call:git config --global --add safe.directory /media/data/users/jhu3szh/serialize</code></pre><p><strong>因为git的权限安全策略导致的报错，可以考虑把目录下的所有内容都添加到信任列表：</strong></p><pre><code>git config --global --add safe.directory &quot;*&quot;</code></pre><h2 id="3-hexo搭建Github博客上传后，访问网页显示404问题"><a href="#3-hexo搭建Github博客上传后，访问网页显示404问题" class="headerlink" title="3.hexo搭建Github博客上传后，访问网页显示404问题"></a>3.hexo搭建Github博客上传后，访问网页显示404问题</h2><h3 id="1-你的github上的项目名字新建有误"><a href="#1-你的github上的项目名字新建有误" class="headerlink" title="1.你的github上的项目名字新建有误"></a>1.你的github上的项目名字新建有误</h3><p>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名</p><h3 id="2-你的yml文件配置有误"><a href="#2-你的yml文件配置有误" class="headerlink" title="2.你的yml文件配置有误"></a>2.你的yml文件配置有误</h3><p>yml文件对数据格式有着严格的要求</p><blockquote><p>检查是否有空格，单引号删掉没</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
